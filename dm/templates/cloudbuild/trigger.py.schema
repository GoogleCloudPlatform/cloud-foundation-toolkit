# Copyright 2018 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

info:
  title: Cloud Build Trigger
  author: Sourced Group Inc.
  description: |
    Supports creation of an automated Cloud Build trigger.

    For more information on this resource, see
    https://cloud.google.com/cloud-build/docs/running-builds/automate-builds

    APIs endpoints used by this template:
    - gcp-types/cloudbuild-v1:cloudbuild.projects.triggers.create =>
        https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.triggers/create
    - gcp-types/cloudbuild-v1:cloudbuild.projects.triggers.patch =>
        https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.triggers/patch
    - gcp-types/cloudbuild-v1:cloudbuild.projects.triggers.delete =>
        https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.triggers/delete

imports:
  - path: trigger.py

#additionalProperties: false

#required:
#  - triggerTemplate

properties:
  project:
    type: string
    description: |
      The project ID of the project containing resources. The
      Google apps domain is prefixed if applicable.
  description:
    type: string
    description: The human-readable trigger description.
  triggerTemplate:
    type: object
    additionalProperties: false
    description: |
      The template describing the types of source changes that trigger a build.
      Branch and tag names in the trigger templates are interpreted as regular
      expressions. Any branch or tag change that matches that regular
      expression triggers a build.
    properties:
      projectId:
        type: string
        description: |
          The ID of the project that owns the Cloud Source repository.
          If omitted, the ID of the project requesting the build is assumed.
      repoName:
        type: string
        description: |
          The name of the Cloud Source repository. If omitted, the name
          "default" is assumed.
      dir:
        type: string
        description: |
          The directory to run the build in (path relative to the source root).
          If a step's dir value is specified as an absolute path, this value
          is ignored for that step's execution.
      revision:
        type: string
        oneOf:
          - "$ref": "#/definitions/branchName"
          - "$ref": "#/definitions/tagName"
          - "$ref": "#/definitions/commitSha"
  github:
    type: object
    additionalProperties: false
    description: |
      GitHubEventsConfig describes the configuration of a trigger that creates 
      a build whenever a GitHub event is received.
    properties:
      installationId:
        type: string
        description: |
          The installationID that emits the GitHub event.
      owner:
        type: string
        description: |
          Owner of the repository. For example: The owner for 
          https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
      name:
        type: string
        description: |
          Name of the repository. For example: The name for 
          https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
      pullRequest:
        type: object
        additionalProperties: false
        description: |
          filter to match changes in pull requests.
        properties:
           commentControl:
              type: string
              description: |
                Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator.
              enum:
                - COMMENTS_DISABLED
                - COMMENTS_ENABLED
           branch:
              type: string
              description: |
                Regex of branches to match.
                
                The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
      push:
        type: object
        additionalProperties: false
        description: |
          filter to match changes in refs like branches, tags.
        properties:
           branch:
              type: string
              description: |
                Regex of branches to match.
                
                The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
           tag:
              type: string
              description: |
                Regexes matching tags to build.
                
                The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax


  disabled:
    type: boolean
    default: False
    description: If True, the trigger never results in a build.
  substitutions:
    type: object
    description: |
      Substitution data for the Build resource specified in key-value pairs.
      Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  ignoredFiles:
    type: array
    uniqItems: true
    description: |
      A file glob match using http://godoc/pkg/path/filepath#Match extended 
      with support for "**". If both ignoredFiles and changed files are empty, 
      they are not used to determine whether or not to trigger a build. If
      ignoredFiles is not empty, we ignore the files that match any of
      the ignored_file globs. If the changeset contains no files outside of the
      ignoredFiles globs, we do not trigger a build.
    items:
      type: string
  includedFiles:
    type: array
    uniqItems: true
    description: |
      A file glob match using http://godoc/pkg/path/filepath#Match extended
      with support for "**". If any of the files altered in the commit pass
      the ignoredFiles filter, and includedFiles is empty, then (as far as this
      filter is concerned), we must trigger a build. If any of the files
      altered in the commit pass the ignoredFiles filter, and includedFiles
      is not empty, we must make sure that at least one of those files matches
      the includedFiles glob. If not, we do not trigger a build.
    items:
      type: string
  build_template:
    oneOf:
      - "$ref": "#/definitions/build"
      - "$ref": "#/definitions/filename"
  tags:
    type: array
    uniqItems: true
    description: |
      Tags for annotation of a BuildTrigger
    items:
      type: string

definitions:
  storageSource:
    type: object
    additionalProperties: false
    description: |
      The location of the source in an archive file on Google Cloud Storage.
    properties:
      bucket:
        type: string
        description: The Google Cloud Storage bucket containing the source.
      object:
        type: string
        description: |
          The Google Cloud Storage object containing the source. Must be a
          gzipped archive file (.tar.gz).
      generation:
        type: string
        description: |
          The Google Cloud Storage generation for the object. If omitted,
          the latest generation is used.
  repoSource:
    type: object
    additionalProperties: false
    description: The source location in the Google Cloud Source repository.
    properties:
      projectId:
        type: string
        description: |
          The ID of the project that owns the Cloud Source repository.
      repoName:
        type: string
        description: |
          The name of the Google Cloud Source repository. If omitted, the
          name "default" is assumed.
      dir:
        type: string
        description: |
          The directory to run the build in (path relative to the source root).
          If a step's directory is specified as an absolute path, this value is
          ignored for that step's execution.
      revision:
        type: string
        oneOf:
          - "$ref": "#/definitions/branchName"
          - "$ref": "#/definitions/tagName"
          - "$ref": "#/definitions/commitSha"
  commitSha:
    type: string
    description: Explicit commit SHA to build.
  branchName:
    type: string
    description: The name of the branch to build.
  tagName:
    type: string
    description: The name of the tag to build.
  filename:
    type: string
    description: |
      The path, from the source root, to a file whose contents are used for
      the template.
  build:
    type: object
    additionalProperties: false
    description: The contents of the build template.
    properties:
      source:
        type: object
        additionalProperties: false
        description: The location of the source files to build.
        oneOf:
          - "$ref": "#/definitions/storageSource"
          - "$ref": "#/definitions/repoSource"
      steps:
        type: array
        uniqItems: true
        description: The list of the steps in the build pipeline.
        items:
          type: object
          additionalProperties: false
          description: A step in the build pipeline.
          required:
            - name
          properties:
            name:
              type: string
              description: |
                The name of the container image that runs the build step.
            env:
              type: array
              uniqItems: true
              description: |
                The list of environment variable definitions to be used when
                running a step. The elements are in the "KEY=VALUE" form,
                wherein the environment variable "KEY" is given the value
                "VALUE".
              items:
                type: string
            args:
              type: array
              description: |
                The list of build arguments to be passed to the step when
                it is started. If the image used to run the step's container
                has an entry point, the array elements are used as arguments
                to that entry point. If the image does not define an entry
                point, the first element in the array is used as the entry
                point, and the remainder are used as arguments.
              items:
                type: string
            dir:
              type: string
              description: |
                The working directory to use when running the step's container.
                If the value is a relative path, it is relative to the build's
                working directory. If this value is an absolute path, it may
                be outside the build's working directory. In this case, the
                contents of the path may not be persisted across the build step
                executions, unless a volume for that path is specified.
                If the build specifies a RepoSource with dir and a step with a
                dir, which specifies an absolute path, the RepoSource dir is
                ignored for the step's execution.
            id:
              type: string
              description: |
                The unique identifier for the build step. Used in waitFor to
                reference this build step as a dependency.
            waitFor:
              type: array
              uniqItems: true
              description: |
                The ID(s) of the step(s) this build step depends on.
                The build step will not start until all the build steps in 
                waitFor have completed successfully. If waitFor is empty,
                this build step will start when all the previous build steps 
                in the Build.Steps list have completed successfully.
              items:
                type: string
            entrypoint:
              type: string
              description: |
                The entry point to be used instead of the build step image's 
                default entry point. If not set, the image's default entry 
                point is used.
            secretEnv:
              type: array
              uniqItems: true
              description: |
                The list of environment variables are encrypted using the
                Cloud Key Management Service crypto key. These values must be
                specified in the build's Secret.
              items:
                type: string
            volumes:
              type: array
              uniqItems: true
              description: The list of volumes to mount into the build step.
              items:
                type: object
                additionalProperties: false
                properties:
                  name:
                    type: string
                    description: |
                      The name of the volume to mount. Volume names must be 
                      unique per build step, and must be valid names for Docker
                      volumes. Each named volume must be used by at least two
                      build steps.
                  path:
                    type: string
                    description: |
                      The path to mount the volume at. Paths must be absolute
                      and cannot conflict with other volume paths on the same 
                      build step or with certain reserved volume paths.
            timeout:
              type: string
              description: |
                The time limit for executing the build step. If not defined,
                the step has no time limit, and is allowed to continue to run
                until it either completes or the build itself times out.
                Defined in seconds with up to nine fractional digits,
                terminated by 's'; for example: 3.5s.
      timeout:
        type: string
        description: |
          Amount of time that this build should be allowed to run, to second
          granularity. If this amount of time elapses, work on the build will
          cease and the build status will be TIMEOUT.
          Default time is ten minutes.
          A duration in seconds with up to nine fractional digits, terminated
          by 's'. Example: "3.5s".
      images:
        type: array
        uniqItems: true
        description: |
          The list of images to be pushed upon successful completion of all
          build steps. The images are pushed using the Builder service
          account's credentials. The digests of the pushed images are stored
          in the Build resource's results field. If any of the images fail
          to be pushed, the build status is marked as FAILURE.
        items:
          type: string
      artifacts:
        type: object
        additionalProperties: false
        description: |
          Artifacts produced by the build that must be uploaded upon successful
          completion of all build steps.
        properties:
          images:
            type: array
            uniqItems: true
            description: |
              The list of images to be pushed upon successful completion of all
              build steps. The images are pushed using the Builder service
              account's credentials. The digests of the pushed images are
              stored in the Build resource's results field. If any of the
              images fail to be pushed, the build status is marked as FAILURE.
            items:
              type: string
          objects:
            type: object
            additionalProperties: false
            description: |
              The list of objects to be uploaded to Cloud Storage upon
              successful completion of all build steps. Files in the
              workspace matching specified paths globs are uploaded using
              the Builder service account's credentials.
            properties:
              location:
                type: string
                description: |
                  The Cloud Storage bucket, with an optional object path,
                  in the "gs://bucket/path/to/somewhere/" form. Files in
                  the workspace matching any pattern under that path are
                  uploaded to Cloud Storage with this location as a prefix.
              paths:
                type: array
                uniqItems: true
                description: |
                  Path globs used to match files in the build's workspace.
                items:
                  type: string
      logsBucket:
        type: string
        description: |
          The Google Cloud Storage bucket where logs are written.
          The log file names are in the ${logsBucket}/log-${build_id}.txt
          format.
      options:
        type: object
        additionalProperties: false
        description: Special options for this build.
        properties:
          sourceProvenanceHash:
            type: array
            uniqItems: true
            items:
              type: string
              enum:
                - NONE
                - SHA256
                - MD5
          requestedVerifyOption:
            type: string
            description: The requested verifiability option.
            enum:
              - NOT_VERIFIED
              - VERIFIED
          machineType:
            type: string
            description: |
              The type of the Compute Engine machine to run thebuild on.
            enum:
              - UNSPECIFIED
              - N1_HIGHCPU_8
              - N1_HIGHCPU_32
          diskSizeGb:
            type: string
            description: |
              The requested disk size for the VM that runs the build. This is
              NOT "disk free"; some of the space is used by the operating
              system and build utilities.
          substitutionOption:
            type: string
            description: |
              The option to specify behavior when there is an error in the
              substitution checks.
            enum:
              - MUST_MATCH
              - ALLOW_LOOSE
          logStreamingOption:
            type: string
            description: |
              The option to define the build behavior when streaming logs 
              to Google Cloud Storage.
            enum:
              - STREAM_DEFAULT
              - STREAM_ON
              - STREAM_OFF
          logging:
            type: string
            description: |
              The option to specify the logging mode, which determines where
              the logs are stored.
            enum:
              - LOGGING_UNSPECIFIED
              - LEGACY
              - GCS_ONLY
          env:
            type: array
            uniqItems: true
            description: |
              A list of global environment variable definitions that will exist for all build steps in this build.
              If a variable is defined in both globally and in a build step, the variable will use the build step value.

              The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
            items:
              type: string
          secretEnv:
            type: array
            uniqItems: true
            description: |
              A list of global environment variables, which are encrypted using a Cloud Key Management Service crypto key.
              These values must be specified in the build's Secret. These variables will be available to
              all build steps in this build.
            items:
              type: string
          volumes:
            type: array
            uniqItems: true
            description: |
              Global list of volumes to mount for ALL build steps

              Each volume is created as an empty volume prior to starting the build process. Upon completion of the build,
              volumes and their contents are discarded. Global volume names and paths cannot conflict with the volumes
              defined a build step.

              Using a global volume in a build with only one step is not valid as it is indicative of a build request
              with an incorrect configuration.
            items:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                  description: |
                    The name of the volume to mount. Volume names must be unique
                    per build step, and must be valid names for Docker volumes.
                    Each named volume must be used by at least two build steps.
                path:
                  type: string
                  description: |
                    The path to mount the volume at. Paths must be absolute.
                    They cannot conflict with other volume paths on the same
                    build step or with certain reserved volume paths.
      substitutions:
        type: object
        additionalProperties: false
        description: |
          Substitution data for the build resource. A list of key-value items.
          Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
      tags:
        type: array
        uniqItems: true
        description: Build annotation tags. These are NOT Docker tags.
        items:
          type: string
      secrets:
        type: object
        additionalProperties: false
        description: Secrets to decrypt using Cloud Key Management Service.
        properties:
          secret:
            type: object
            additionalProperties: false
            properties:
              kmsKeyName:
                type: string
                description: |
                  The Cloud KMS key name to use to decrypt these environment
                  variables.
              secretEnv:
                type: object
                additionalProperties: false
                description: |
                  Maps of the environment variable names to their encrypted
                  values. 

outputs:
  properties:
    - id:
        type: string
        description: Unique identifier of the trigger.
    - createTime:
        type: string
        description: | 
          The time the build was requested, in the RFC3339 UTC "Zulu" format.

documentation:
  - templates/cloudbuild/README.md

examples:
  - templates/cloudbuild/examples/cloudbuild_trigger.yaml


# cat cloudbuild/examples/cloudbuild_trigger.yaml | yq .resources[0].properties > project.json; cat cloudbuild/trigger.py.schema | yq . > project.py.schema.json; ajv validate -s project.py.schema.json -d project.json
