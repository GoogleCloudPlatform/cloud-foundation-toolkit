# Copyright 2018 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

info:
  title: Google Cloud Storage Bucket
  author: Sourced Group Inc.
  version: 1.1.1
  description: |
    Supports creation of a Google Cloud Storage bucket.

    For more information on this resource:
    https://cloud.google.com/storage/docs/json_api/.

    APIs endpoints used by this template:
    - gcp-types/storage-v1:buckets =>
        https://cloud.google.com/storage/docs/json_api/v1/buckets
    - gcp-types/storage-v1:virtual.buckets.iamMemberBinding =>
        TODO - Virtual type documentation needed

imports:
  - path: gcs_bucket.py

additionalProperties: false

allOf:
  - oneOf:
      - properties:
          iamConfiguration:
            properties:
              bucketPolicyOnly:
                properties:
                  enabled:
                    enum: [False]
      - allOf:
          - not:
              required:
                - acl
          - not:
              required:
                - defaultObjectAcl
          - required:
              - iamConfiguration
            properties:
              iamConfiguration:
                properties:
                  bucketPolicyOnly:
                    properties:
                      enabled:
                        enum: [True]
  - oneOf:
      - allOf:
          - not:
              required:
                - userProject
          - properties:
              billing:
                properties:
                  requesterPays:
                    enum: [False]
      - allOf:
          - required:
              - billing
          - properties:
              billing:
                properties:
                  requesterPays:
                    enum: [True]

properties:
  name:
    type: string
    description: The name of the bucket. Resource name would be used if omitted.
  project:
    type: string
    description: |
      The project ID of the project containing the bucket.
  userProject:
    type: string
    description: |
      The project to be billed for this request. Current project is used if not set.
  location:
    type: string
    default: us-east1
    description: The region name where the bucket is deployed.
  defaultEventBasedHold:
    type: boolean
    description: Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.
  storageClass:
    type: string
    default: STANDARD
    description: |
      The bucket's default storage class. Defines how objects
      in the bucket are stored; determines the SLA and the
      cost of storage.
    enum:
      - REGIONAL
      - MULTI_REGIONAL
      - STANDARD
      - NEARLINE
      - COLDLINE
      - DURABLE_REDUCED_AVAILABILITY
  versioning:
    type: object
    additionalProperties: false
    description: Enables/disables object versioning.
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        description: Enables/disables object versioning.
  predefinedAcl:
    type: string
    description: |
      The predefined or "canned" ACL - an alias for a set of specific
      ACL entries that you can use to quickly apply multiple ACL entries
      to a bucket or object in a single operation.
      Ref: https://cloud.google.com/storage/docs/access-control/lists.
    enum:
      - authenticatedRead
      - private
      - projectPrivate
      - publicRead
      - publicReadWrite
  predefinedDefaultObjectAcl:
    type: string
    enum:
      - authenticatedRead
      - bucketOwnerFullControl
      - bucketOwnerRead
      - private
      - projectPrivate
      - publicRead
    description: |
      The predefined or "canned" ACL for the default object in the bucket -
      an alias for a set of specific ACL entries that you can use to quickly
      apply multiple ACL entries to a bucket or object in a single operation.
      Ref: https://cloud.google.com/storage/docs/access-control/lists.
  encryption:
    type: object
    additionalProperties: false
    description: |
      Encryption configuration for a bucket.
    required:
      - defaultKmsKeyName
    properties:
      defaultKmsKeyName:
        type: string
        description: |
          A Cloud KMS key that will be used to encrypt objects inserted into this bucket,
          if no encryption method is specified.
  retentionPolicy:
    type: object
    additionalProperties: false
    description: |
      The bucket's retention policy, which defines the minimum age an object in the bucket
      must have to be deleted or overwritten.
    required:
      - retentionPeriod
    properties:
      retentionPeriod:
        type: integer
        maximum: 3155760000
        exclusiveMaximum: True
        description: |
          The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted,
          overwritten, or archived. The value must be less than 3,155,760,000 seconds.
  iamConfiguration:
    type: object
    additionalProperties: false
    description: |
      The bucket's IAM configuration.
    required:
      - bucketPolicyOnly
    properties:
      bucketPolicyOnly:
        type: object
        additionalProperties: false
        description: |
          The bucket's Bucket Policy Only configuration.
        required:
          - enabled
        properties:
          enabled:
            type: boolean
            default: False
            description: |
              Whether or not the bucket uses Bucket Policy Only.
              If set, access checks only use bucket-level IAM policies or above.
  billing:
    type: object
    additionalProperties: false
    description: |
      The bucket's billing configuration.
    required:
      - requesterPays
    properties:
      requesterPays:
        type: boolean
        default: False
        description: |
          When set to true, Requester Pays is enabled for this bucket.
  logging:
    type: object
    additionalProperties: false
    required:
      - logBucket
    properties:
      logBucket:
        type: string
        description: |
          The destination bucket where the current bucket's logs
          must be placed.
      logObjectPrefix:
        type: string
        description: The prefix for log object names.
  cors:
    type: array
    uniqueItems: true
    description: |
      The bucket's Cross-Origin Resource Sharing (CORS) configuration.
    items:
      type: object
      additionalProperties: false
      required:
        - method
        - origin
      properties:
        maxAgeSeconds:
          type: integer
          description: |
            The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.
        method:
          type: array
          uniqueItems: true
          description: |
            The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc)
            Note: "*" is permitted in the list of methods, and means "any method".
          items:
            type: string
        origin:
          type: array
          uniqueItems: true
          description: |
            The list of Origins eligible to receive CORS response headers.
            Note: "*" is permitted in the list of origins, and means "any Origin".
          items:
            type: string
        responseHeader:
          type: array
          uniqueItems: true
          description: |
            The list of HTTP headers other than the simple response headers to give permission
            for the user-agent to share across domains.
          items:
            type: string
  defaultObjectAcl:
    type: array
    uniqueItems: true
    description: |
      Default access controls to apply to new objects when no ACL is provided.
      This list defines an entity and role for one or more defaultObjectAccessControls Resources.
    items:
      type: object
      additionalProperties: false
      required:
        - role
        - entity
      properties:
        role:
          type: string
          description: |
            The access permission for the entity.

            Acceptable values are:
            "OWNER"
            "READER"
          enum:
            - OWNER
            - READER
        entity:
          type: string
          description: |
            The entity holding the permission, in one of the following forms:
            - user-userId
            - user-email
            - group-groupId
            - group-email
            - domain-domain
            - project-team-projectId
            - allUsers
            - allAuthenticatedUsers

            Examples:
            - The user liz@example.com would be user-liz@example.com.
            - The group example@googlegroups.com would be group-example@googlegroups.com.
            - To refer to all members of the G Suite for Business domain example.com, the entity would be domain-example.com.
  acl:
    type: array
    uniqueItems: true
    description: |
      Access controls on the bucket, containing one or more bucketAccessControls Resources.
    items:
      type: object
      additionalProperties: false
      required:
        - role
        - entity
      properties:
        role:
          type: string
          description: |
            The access permission for the entity.
          enum:
            - OWNER
            - READER
            - WRITER
        entity:
          type: string
          description: |
            The entity holding the permission, in one of the following forms:
            - user-userId
            - user-email
            - group-groupId
            - group-email
            - domain-domain
            - project-team-projectId
            - allUsers
            - allAuthenticatedUsers

            Examples:
            - The user liz@example.com would be user-liz@example.com.
            - The group example@googlegroups.com would be group-example@googlegroups.com.
            - To refer to all members of the G Suite for Business domain example.com, the entity would be domain-example.com.
  bindings:
    type: array
    uniqueItems: true
    description: IAM bindings for the bucket.
    items:
      type: object
      additionalProperties: false
      required:
        - role
        - members
      properties:
        role:
          type: string
          pattern: ^roles\/storage\.
          description: The role to assign to members.
        members:
          type: array
          uniqueItems: true
          items:
            type: string
            description: |
              A collection of identifiers for members who may assume the provided role.
              Recognized identifiers are as follows:
              allUsers — A special identifier that represents anyone on the internet; with or without a Google account.
              allAuthenticatedUsers — A special identifier that represents anyone who is authenticated with
                a Google account or a service account.
              user:emailid — An email address that represents a specific account. For example,
                user:alice@gmail.com or user:joe@example.com.
              serviceAccount:emailid — An email address that represents a service account. For example,
                serviceAccount:my-other-app@appspot.gserviceaccount.com .
              group:emailid — An email address that represents a Google group. For example, group:admins@example.com.
              domain:domain — A G Suite domain name that represents all the users of that domain.
                For example, domain:google.com or domain:example.com.
              projectOwner:projectid — Owners of the given project. For example, projectOwner:my-example-project
              projectEditor:projectid — Editors of the given project. For example, projectEditor:my-example-project
              projectViewer:projectid — Viewers of the given project. For example, projectViewer:my-example-project
  lifecycle:
    type: object
    additionalProperties: false
    description: The storage object's lifecycle actions and conditions.
    properties:
      rule:
        type: array
        uniqueItems: true
        description: The lifecycle action and condition.
        items:
          type: object
          additionalProperties: false
          required:
            - action
            - condition
          properties:
            action:
              type: object
              additionalProperties: false
              description: The action to be taken if the condition is met.
              required:
                - type
              properties:
                storageClass:
                  type: string
                  description:
                    The storage class to switch on if the condition is met.
                  enum:
                    - NEARLINE
                    - COLDLINE
                type:
                  type: string
                  description: The action type - setStorageClass or Delete.
                  enum:
                    - SetStorageClass
                    - Delete
            condition:
              type: object
              additionalProperties: false
              description: The lifecycle condition.
              properties:
                age:
                  type: number
                  description: |
                    The object age. Selects all objects of this age or older.
                createdBefore:
                  type: string
                  description: |
                    The date part of a date in the RFC 3339 format.
                    For example, "2013-01-15".
                matchesStorageClass:
                  type: array
                  uniqueItems: true
                  description: |
                    All objects with any of the selected storage classes.
                  items:
                    type: string
                    enum:
                      - MULTI_REGIONAL
                      - REGIONAL
                      - STANDARD
                      - DURABLE_REDUCED_AVAILABILITY
                      - NEARLINE
                      - COLDLINE
                isLive:
                  type: boolean
                  description: |
                    Defines whether the object is live. Applies only to
                    versioned objects.
                numNewerVersions:
                  type: number
                  description: |
                    The number of newer versions. Selects all objects with
                    at least that many newer versions. Applies only to
                    versioned objects.
  labels:
    type: object
    description: User-provided labels in key/value pairs.
  requesterPays:
    type: boolean
    description: |
      When set to true, Requester Pays is enabled for this bucket.
  website:
    type: object
    additionalProperties: false
    description: |
      The bucket's website configuration, controlling how the service behaves
      when accessing the bucket contents as a web site.
    properties:
      mainPageSuffix:
        type: string
        description: |
          The suffix that allows creation of index.html objects to represent
          directory pages. If the requested object path is missing, the service
          ensures that the trailing '/' is present, appends this suffix, and
          attempt to retrieve the resulting object.
      notFoundPage:
        type: string
        description: |
          The named object from the bucket that the service returns as the
          content for the 404 Not Found result if the requested object path
          is missing, and no mainPageSuffix object is provided.
outputs:
  properties:
    - name:
        type: string
        description: The name of the storage bucket resource.
    - selfLink:
        type: string
        description: The URI (SelfLink) of the storage bucket resource.
    - url:
        type: string
        description: |
          The base URL of the bucket in the gs://<bucket-name> format.

documentation:
  - templates/gcs_bucket/README.md

examples:
  - templates/gcs_bucket/examples/gcs_bucket.yaml
  - templates/gcs_bucket/examples/gcs_bucket_iam_bindings.yaml
  - templates/gcs_bucket/examples/gcs_bucket_lifecycle.yaml
