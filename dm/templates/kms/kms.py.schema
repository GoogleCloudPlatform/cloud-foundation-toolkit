# Copyright 2018 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

info:
  title: Google Cloud KMS KeyRing and Keys
  version: 1.0.0
  author: Sourced Group Inc.
  description: |
    Creates a Cloud KMS KeyRing and cryptographic keys.

    For more information on this resource:
    https://cloud.google.com/kms/docs/reference/rest.

    APIs endpoints used by this template:
    - gcp-types/cloudkms-v1:projects.locations.keyRings =>
        https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings
    - gcp-types/cloudkms-v1:cloudkms.projects.locations =>
        https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings

imports:
  - path: kms.py

additionalProperties: false

required:
  - keyRingName

properties:
  keyRingName:
    type: string
    pattern: ^[a-zA-Z0-9_-]{1,63}
    description: |
      The name for the KeyRing. Must be unique within a location.
  project:
    type: string
    description: |
      The project ID of the project containing the keyring.
  region:
    type: string
    default: global
    description: The KeyRing location.
  keys:
    type: array
    uniqueItems: True
    items:
      type: object
      additionalProperties: false
      description: The CryptoKey object.
      required:
        - cryptoKeyName
      properties:
        cryptoKeyName:
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,63}
          description: |
            The name for the CrytoKey. Must be unique within a KeyRing.
        cryptoKeyPurpose:
          type: string
          default: ENCRYPT_DECRYPT
          description: |
            The immutable purpose of the CryptoKey. Describes the
            cryptographic capabilities of the CryptoKey.
          enum:
            - CRYPTO_KEY_PURPOSE_UNSPECIFIED
            - ENCRYPT_DECRYPT
            - ASYMMETRIC_SIGN
            - ASYMMETRIC_DECRYPT
        nextRotationTime:
          type: string
          description: |
            The time when the Key Management Service will automatically
            create a new version of the CryptoKey and mark the new version
            as primary. Keys with the ENCRYPT_DECRYPT purpose support 
            automatic rotation. For all other keys, this field must be left 
            blank. The timestamp is in the RFC3339 UTC "Zulu" format, 
            accurate to nanoseconds; e.g., "2014-10-02T15:01:23.045123456Z".
        rotationPeriod:
          type: string
          description: |
            nextRotationTime will be advanced by this period when the service
            automatically rotates a key. Must be at least one day.
            If rotationPeriod is set, nextRotationTime must also be set.
            Keys with purpose ENCRYPT_DECRYPT support automatic rotation.
            For other keys, this field must be omitted. A duration in seconds
            with up to nine fractional digits, terminated by 's'. Example '3.5s'
        versionTemplate:
          type: object
          additionalProperties: false
          description: |
            The template that controls properties of new CryptoKeyVersion 
            instances created by either cryptoKeyVersions.create or 
            auto-rotation.
          properties:
            protectionLevel:
              type: string
              default: SOFTWARE
              description: |
                The level of protection to use when creating a CryptoKeyVersion 
                based on the template.
              enum:
                - PROTECTION_LEVEL_UNSPECIFIED
                - SOFTWARE
                - HSM
            algorithm:
              type: string
              default: GOOGLE_SYMMETRIC_ENCRYPTION
              description: |
                The CryptoKeyVersion algorithm, defines the parameters
                to be used for each cryptographic operation.
              enum:
                - CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED
                - GOOGLE_SYMMETRIC_ENCRYPTION
                - RSA_SIGN_PSS_2048_SHA256
                - RSA_SIGN_PSS_3072_SHA256
                - RSA_SIGN_PSS_4096_SHA256
                - RSA_SIGN_PSS_4096_SHA512
                - RSA_SIGN_PKCS1_2048_SHA256
                - RSA_SIGN_PKCS1_3072_SHA256
                - RSA_SIGN_PKCS1_4096_SHA256
                - RSA_SIGN_PKCS1_4096_SHA512
                - RSA_DECRYPT_OAEP_2048_SHA256
                - RSA_DECRYPT_OAEP_3072_SHA256
                - RSA_DECRYPT_OAEP_4096_SHA256
                - RSA_DECRYPT_OAEP_4096_SHA512
                - EC_SIGN_P256_SHA256
                - EC_SIGN_P384_SHA384
        labels:
          type: object
          description: |
            Labels with user-defined metadata. For more info, see
            https://cloud.google.com/kms/docs/labeling-keys.
        iamPolicyBinding:
          type: array
          uniqueItems: True
          description: The IAM bindings for the CryptoKey.
          items:
            type: object
            additionalProperties: false
            required:
              - role
              - members
            properties:
              role:
                type: string
                pattern: ^roles\/
                description: The role to assign to the members.
              members:
                type: array
                items:
                  type: string
                  description: |
                    The member to add the binding to, in the format
                    user|group|serviceAccount:email or domain:domain.
                    Can also be one of the special values - allUsers or
                    allAuthenticatedUsers.

outputs:
  properties:
    - keyRing:
        type: string
        description: Path to the KeyRing resource.

documentation:
  - templates/kms/README.md

examples:
  - templates/kms/examples/kms.yaml
  - templates/kms/examples/kms_signkey.yaml
