apiVersion: kpt.dev/v1alpha1
kind: Kptfile
metadata:
  name: mysql-ha
packageMetadata:
  shortDescription: creates a mysql high availability cluster
openAPI:
  definitions:
    io.k8s.cli.setters.password-1:
      description: SQL password (base64 encoded)
      x-k8s-cli:
        setter:
          name: password-1
          value: "${PASSWORD_1?}"
          setBy: PLACEHOLDER
    io.k8s.cli.setters.password-2:
      description: SQL password (base64 encoded)
      x-k8s-cli:
        setter:
          name: password-2
          value: "${PASSWORD_2?}"
          setBy: PLACEHOLDER
    io.k8s.cli.setters.password-3:
      description: SQL password (base64 encoded)
      x-k8s-cli:
        setter:
          name: password-3
          value: "${PASSWORD_3?}"
          setBy: PLACEHOLDER
    io.k8s.cli.setters.database-1-name:
      description: name of first SQL database
      x-k8s-cli:
        setter:
          name: database-1-name
          value: mysql-ha-database-1
          setBy: package-default
    io.k8s.cli.setters.database-2-name:
      description: name of second SQL database
      x-k8s-cli:
        setter:
          name: database-2-name
          value: mysql-ha-database-2
          setBy: package-default
    io.k8s.cli.setters.instance-name:
      description: name of SQL instance
      x-k8s-cli:
        setter:
          name: instance-name
          value: mysql-ha-solution
          setBy: package-default
    io.k8s.cli.setters.region:
      description: region of SQL instance
      x-k8s-cli:
        setter:
          name: region
          value: us-central1
          setBy: package-default
    io.k8s.cli.setters.username-1:
      description: name of first SQL user
      x-k8s-cli:
        setter:
          name: username-1
          value: ${USERNAME_1?}
          setBy: PLACEHOLDER
    io.k8s.cli.setters.username-2:
      description: name of second SQL user
      x-k8s-cli:
        setter:
          name: username-2
          value: ${USERNAME_2?}
          setBy: PLACEHOLDER
    io.k8s.cli.setters.username-3:
      description: name of third SQL user
      x-k8s-cli:
        setter:
          name: username-3
          value: ${USERNAME_3?}
          setBy: PLACEHOLDER
    io.k8s.cli.substitutions.backup-instance-1-name:
      x-k8s-cli:
        substitution:
          name: backup-instance-1-name
          pattern: INSTANCE_NAME_SETTER-backup-1
          values:
          - marker: INSTANCE_NAME_SETTER
            ref: '#/definitions/io.k8s.cli.setters.instance-name'
    io.k8s.cli.substitutions.backup-instance-2-name:
      x-k8s-cli:
        substitution:
          name: backup-instance-2-name
          pattern: INSTANCE_NAME_SETTER-backup-2
          values:
          - marker: INSTANCE_NAME_SETTER
            ref: '#/definitions/io.k8s.cli.setters.instance-name'
    io.k8s.cli.substitutions.backup-instance-3-name:
      x-k8s-cli:
        substitution:
          name: backup-instance-3-name
          pattern: INSTANCE_NAME_SETTER-backup-3
          values:
          - marker: INSTANCE_NAME_SETTER
            ref: '#/definitions/io.k8s.cli.setters.instance-name'
    io.k8s.cli.substitutions.backup-instance-4-name:
      x-k8s-cli:
        substitution:
          name: backup-instance-4-name
          pattern: INSTANCE_NAME_SETTER-backup-4
          values:
          - marker: INSTANCE_NAME_SETTER
            ref: '#/definitions/io.k8s.cli.setters.instance-name'
    io.k8s.cli.setters.zone:
      description: zone of instance
      x-k8s-cli:
        setter:
          name: zone
          value: us-central1-b
          setBy: package-default
    io.k8s.cli.setters.zone-backup:
      description: zone of backup instance
      x-k8s-cli:
        setter:
          name: zone-backup
          value: us-central1-c
          setBy: package-default
    io.k8s.cli.setters.external-ip-range:
      description: ip range to allow to connect
      x-k8s-cli:
        setter:
          name: external-ip-range
          value: 192.10.10.10/32
          setBy: package-default
