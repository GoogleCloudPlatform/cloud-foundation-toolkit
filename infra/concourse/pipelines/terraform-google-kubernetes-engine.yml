resource_types:

- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:

- name: pull-request
  type: pull-request
  webhook_token: ((kubernetes-engine.github_webhook_token))
  source:
    repository: terraform-google-modules/terraform-google-kubernetes-engine
    access_token: ((github.pr-access-token))

- name: lint-test-image
  type: docker-image
  source:
    repository: gcr.io/cloud-foundation-cicd/cft/lint
    tag: 1.0.0
    username: _json_key
    password: ((sa.google))

- name: integration-test-image
  type: docker-image
  source:
    username: _json_key
    password: ((sa.google))
    repository: gcr.io/cloud-foundation-cicd/cft/kitchen-terraform_terraform-google-kubernetes-engine

jobs:

- name: lint-tests
  public: true
  plan:
  - get: pull-request
    trigger: true
    version: every
  - put: notify-lint-test-pending
    resource: pull-request
    params:
      path: pull-request
      context: lint-tests
      status: pending
  - get: lint-test-image
  - task: run
    image: lint-test-image
    config:
      platform: linux
      inputs:
      - name: pull-request
        path: terraform-google-kubernetes-engine
      - name: lint-test-image
      run:
        path: make
        args: ['-s']
        dir: terraform-google-kubernetes-engine
  on_success:
    put: notify-lint-test-success
    resource: pull-request
    params:
      path: pull-request
      context: lint-tests
      status: success
  on_failure:
    put: notify-lint-test-failure
    resource: pull-request
    params:
      path: pull-request
      context: lint-tests
      status: failure
  on_abort:
    put: notify-lint-test-error
    resource: pull-request
    params:
      path: pull-request
      context: lint-tests
      status: error

- name: build-integration-test-image
  public: true
  plan:
  - get: pull-request
    trigger: true
    version: every
  - put: notify-build-integration-test-image-pending
    resource: pull-request
    params:
      path: pull-request
      context: build-integration-test-image
      status: pending
  - task: build-and-push
    privileged: true
    config:
      platform: linux
      inputs:
      - name: pull-request
        path: terraform-google-kubernetes-engine
      image_resource:
        type: docker-image
        source:
          repository: karlkfi/concourse-dcind
      run:
        path: entrypoint.sh
        args:
        - bash
        - -exc
        - |
          apk add --update make git
          set +x
          echo $SA | docker login -u _json_key --password-stdin https://gcr.io
          set -x
          make docker_build_kitchen_terraform DOCKER_TAG_KITCHEN_TERRAFORM=`git rev-parse --verify HEAD`
          make docker_push_kitchen_terraform DOCKER_TAG_KITCHEN_TERRAFORM=`git rev-parse --verify HEAD`
        dir: terraform-google-kubernetes-engine
      params:
        SA: ((sa.google))
  on_success:
    put: notify-build-integration-test-success
    resource: pull-request
    params:
      path: pull-request
      context: build-integration-test-image
      status: success
  on_failure:
    put: notify-build-integration-test-failure
    resource: pull-request
    params:
      path: pull-request
      context: build-integration-test-image
      status: failure
  on_abort:
    put: notify-build-integration-test-error
    resource: pull-request
    params:
      path: pull-request
      context: build-integration-test-image
      status: error

- name: integration-tests
  public: true
  plan:
  - get: pull-request
    passed: [build-integration-test-image]
    trigger: true
    version: every
  - put: notify-integration-test-pending
    resource: pull-request
    params:
      path: pull-request
      context: integration-tests
      status: pending
  - get: integration-test-image
    trigger: true
    params:
      tag: [pull-request/commit]
  - aggregate:

    - task: run-tests-deploy-service
      image: integration-test-image
      file: pull-request/test/ci/deploy-service.yml
      params: &run-tests-params
        PROJECT_ID: ((kubernetes-engine.phoogle_project_id))
        SERVICE_ACCOUNT_JSON: ((kubernetes-engine.phoogle_sa))

    - task: run-tests-node-pool
      image: integration-test-image
      file: pull-request/test/ci/node-pool.yml
      params:
        <<: *run-tests-params

    - task: run-tests-shared-vpc
      image: integration-test-image
      file: pull-request/test/ci/shared-vpc.yml
      params:
        <<: *run-tests-params

    - task: run-tests-simple-regional
      image: integration-test-image
      file: pull-request/test/ci/simple-regional.yml
      params:
        <<: *run-tests-params

    - task: run-tests-simple-regional-private
      image: integration-test-image
      file: pull-request/test/ci/simple-regional-private.yml
      params:
        <<: *run-tests-params

    - task: run-tests-simple-zonal
      image: integration-test-image
      file: pull-request/test/ci/simple-zonal.yml
      params:
        <<: *run-tests-params

    - task: run-tests-simple-zonal-private
      image: integration-test-image
      file: pull-request/test/ci/simple-zonal-private.yml
      params:
        <<: *run-tests-params

    - task: run-tests-stub-domains
      image: integration-test-image
      file: pull-request/test/ci/stub-domains.yml
      params:
        <<: *run-tests-params

    - task: run-tests-database-encryption
      image: integration-test-image
      file: pull-request/test/ci/database-encryption.yml
      params:
        <<: *run-tests-params

  on_success:
    put: notify-integration-test-success
    resource: pull-request
    params:
      path: pull-request
      context: integration-tests
      status: success
  on_failure:
    put: notify-integration-test-failure
    resource: pull-request
    params:
      path: pull-request
      context: integration-tests
      status: failure
  on_abort:
    put: notify-integration-tests-abort
    resource: pull-request
    params:
      path: pull-request
      context: integration-tests
      status: error

- name: delete-integration-test-image
  public: true
  plan:
  - get: pull-request
    trigger: true
    passed: [integration-tests]
  - task: delete-image
    config:
      platform: linux
      inputs:
      - name: pull-request
        path: terraform-google-kubernetes-engine
      image_resource:
        type: docker-image
        source:
          repository: google/cloud-sdk
          tag: alpine
      run:
        path: /bin/bash
        args:
        - -exc
        - |
          set +x
          echo $SA > $GOOGLE_APPLICATION_CREDENTIALS
          set -x
          TAG=`git rev-parse --verify HEAD`
          echo "Y" | gcloud container images delete gcr.io/cloud-foundation-cicd/cft/kitchen-terraform_terraform-google-kubernetes-engine:$TAG --force-delete-tags
        dir: terraform-google-kubernetes-engine
      params:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/sa.json
        SA: ((sa.google))
