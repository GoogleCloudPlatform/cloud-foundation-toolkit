syntax = "proto3";

package google.cloud.config.bpmetadata;

import "bpmetadata/proto/bpmetadata_ui.proto";

option go_package = "github.com/GoogleCloudPlatform/cloud-foundation-toolkit/cli/bpmetadata";

message BlueprintMetadataSpec {

  // BlueprintInfo defines the basic information of the blueprint.
  BlueprintInfo info = 1;

  // BlueprintContent defines the detail for blueprint related content such as
  // related documentation, diagrams, examples etc.
  BlueprintContent content = 2;

  // BlueprintInterface defines the input and output variables for the blueprint.
  BlueprintInterface interfaces = 3;

  // BlueprintRequirements defines the roles required and the associated services
  // that need to be enabled to provision blueprint resources.
  BlueprintRequirements requirements = 4;

  // BlueprintUI defines the user interface for the blueprint.
  BlueprintUI ui = 5;
}

// BlueprintInfo defines the basic information of the blueprint.
message BlueprintInfo {
  // Title for the blueprint.
  // Autogenerated: First H1 text in readme.md.
  string title = 1;

  // Blueprint source location and source type.
  // Autogen details in BlueprintRepoDetail.
  BlueprintRepoDetail source = 2;

  // Last released semantic version for the packaged blueprint.
  // Autogenerated: From the `module_name` attribute of the `provider_meta "google"` block.
  // E.g.
  // provider_meta "google" {
  //  module_name = "blueprints/terraform/terraform-google-log-analysis/v0.1.5"
  // }
  string version = 3;

  // Actuation tool e.g. Terraform and its required version.
  // Autogen details in BlueprintActuationTool.
  BlueprintActuationTool actuation_tool = 4;

  // Various types of descriptions associated with the blueprint.
  // Autogen details in BlueprintDescription.
  BlueprintDescription description = 5;

  // Path to an image representing the icon for the blueprint.
  // Will be set as "assets/icon.png", if present. Otherwise, it
  // can be manually authored.
  string icon = 6;

  // The time estimate for configuring and deploying the blueprint.
  // Autogen details in BlueprintTimeEstimate.
  BlueprintTimeEstimate deployment_duration = 7;

  // The cost estimate for the blueprint based on preconfigured variables.
  // Autogen details in BlueprintCostEstimate.
  BlueprintCostEstimate cost_estimate = 8;

  // A list of GCP cloud products used in the blueprint.
  // Manually authored.
  repeated BlueprintCloudProduct cloud_products = 9;

  // A configuration of fixed and dynamic GCP quotas that apply to the blueprint.
  // Manually authored.
  repeated BlueprintQuotaDetail quota_details = 10;

  // Details on the author producing the blueprint.
  // Manually authored.
  BlueprintAuthor author = 11;

  // Details on software installed as part of the blueprint.
  // Manually authored.
  repeated BlueprintSoftwareGroup software_groups = 12;

  // Support offered, if any for the blueprint.
  // Manually authored.
  BlueprintSupport support_info = 13;

  // A list of GCP org policies to be checked for successful deployment.
  repeated BlueprintOrgPolicyCheck org_policy_checks = 14;

  // Specifies if the blueprint supports single or multiple deployments per GCP project.
  // If set to true, the blueprint can not be deployed more than once in the same GCP project.
  bool single_deployment = 15;
}

// BlueprintContent defines the detail for blueprint related content such as
// related documentation, diagrams, examples etc.
message BlueprintContent {
  // Diagrams are manually entered.
  BlueprintArchitecture architecture = 1;
  repeated BlueprintDiagram diagrams = 2;
  repeated BlueprintListContent documentation = 3;
  repeated BlueprintMiscContent sub_blueprints = 4;
  repeated BlueprintMiscContent examples = 5;
}

// BlueprintInterface defines the input and output variables for the blueprint.
message BlueprintInterface {
  repeated BlueprintVariable variables = 1;
  // VariableGroups are manually entered.
  repeated BlueprintVariableGroup variable_groups = 2;
  repeated BlueprintOutput outputs = 3;
}

// BlueprintRequirements defines the roles required and the associated services
// that need to be enabled to provision blueprint resources.
message BlueprintRequirements {
  repeated BlueprintRoles roles = 1;
  repeated string services = 2;
}

// BlueprintUI defines the user interface for the blueprint.
message BlueprintUI {
  // The top-level input section that defines the list of variables and
  // their sections on the deployment page.
  BlueprintUIInput input = 1;

  // The top-level section for listing runtime (or blueprint output) information
  // i.e. the console URL for the VM or a button to ssh into the VM etc based on.
  BlueprintUIOutput runtime = 2;
}

message BlueprintRepoDetail {
  // Autogenerated: URL from the .git dir.
  // Can be manually overridden with a custom URL if needed.
  string repo = 1;

  // Set as "git" for now until more types are supported.
  string source_type = 2;
}

// BlueprintActuationTool defines the actuation tool used to provision the blueprint.
message BlueprintActuationTool {
  // Set as "Terraform" for now until more flavors are supported.
  string flavor = 1;

  // Required version for the actuation tool.
  // Autogenerated: For Terraform this is the `required_version` set in
  // `terraform` block. E.g.
  // terraform {
  //   required_version = ">= 0.13"
  // }
  string version = 2;
}

// BlueprintDescription defines the description of the blueprint.
message BlueprintDescription {
  // Autogenerated: All types of descriptions are set with the markdown content
  // immediately after each type's heading declaration in readme.md.

  // Autogenerated: Markdown after "### Tagline".
  string tagline = 1;

  // Autogenerated: Markdown after "### Detailed".
  string detailed = 2;

  // Autogenerated: Markdown after "### PreDeploy".
  string pre_deploy = 3;

  // Autogenerated: Markdown after "### Html".
  string html = 4;

  // Autogenerated: Markdown after "### EulaUrls".
  repeated string eula_urls = 5;

  // Autogenerated: Markdown after "### Architecture"
  // Deprecated. Use BlueprintContent.Architecture instead.
  repeated string architecture = 6;
}

// A time estimate in secs required for configuring and deploying the blueprint.
message BlueprintTimeEstimate {
  // Autogenerated: Set using the content defined under "### DeploymentTime" E.g.
  // ### DeploymentTime
  // - Configuration: X secs
  // - Deployment: Y secs
  int32 configuration_secs = 1;
  int32 deployment_secs = 2;
}

// The cost estimate for the blueprint based on preconfigured variables.
message BlueprintCostEstimate {
  // Autogenerated: Set using the content defined under "### Cost" as a link
  // with a description E.g.
  // ### Cost
  // [View cost details](https://cloud.google.com/products/calculator?hl=en_US&_ga=2.1665458.-226505189.1675191136#id=02fb0c45-cc29-4567-8cc6-f72ac9024add)
  string description = 1;
  string url = 2;
}

// A GCP cloud product used in the blueprint.
// Manually authored.
message BlueprintCloudProduct {
  // A top-level (e.g. "Compute Engine") or secondary (e.g. "Binary Authorization")
  // product used in the blueprint.
  string product_id = 1;

  // Url for the product.
  string page_url = 2;

  // A label string for the product, if it is not an integrated GCP product.
  // E.g. "Data Studio"
  string label = 3;

  // Is the product's landing page external to the GCP console e.g.
	// lookerstudio.google.com
	bool is_external = 4;
}

// BlueprintOrgPolicyCheck defines GCP org policies to be checked
// for successful deployment
message BlueprintOrgPolicyCheck {
	// Id for the policy e.g. "compute-vmExternalIpAccess"
	string policy_id = 1;

	// If not set, it is assumed any version of this org policy
	// prevents successful deployment of this solution.
	repeated string required_values = 2;
}

// QuotaResourceType defines the type of resource a quota is applied to.
enum QuotaResourceType {
  QRT_UNDEFINED = 0;
  QRT_RESOURCE_TYPE_GCE_INSTANCE = 1;
  QRT_RESOURCE_TYPE_GCE_DISK = 2;
}

// BlueprintQuotaDetail defines the quota details for a blueprint.
message BlueprintQuotaDetail {
  // DynamicVariable, if provided, associates the provided input variable
  // with the corresponding resource and quota type. In its absence, the quota
  // detail is assumed to be fixed.
  string dynamic_variable = 1;

  // ResourceType is the type of resource the quota will be applied to i.e.
  // GCE Instance or Disk etc.
  QuotaResourceType resource_type = 2;

  // QuotaType is a key/value pair of the actual quotas and their corresponding
  // values. Valid keys for quota_type can be:
  // MACHINE_TYPE,
  // CPUs,
  // DISK_TYPE OR
  // SIZE_GB.
  map<string, string> quota_type = 3;
}

// BlueprintAuthor defines the author of a blueprint.
message BlueprintAuthor {
  // Name of template author or organization.
  string title = 1;

  // Description of the author.
  string description = 2;

  // Link to the author's website.
  string url = 3;
}

// SoftwareGroupType is a string enum representing the different types of software groups.
enum SoftwareGroupType {
  // UNSPECIFIED is the default value for SoftwareGroupType.
  SG_UNSPECIFIED = 0;
  // OS is a software group that represents an operating system.
  SG_OS = 1;
}

// BlueprintSoftwareGroup is a message that represents a group of related software components for the blueprint.
message BlueprintSoftwareGroup {
  // Type is the pre-defined software type for this group.
  SoftwareGroupType type = 1;

  // Software is a list of software components that belong to this group.
  repeated BlueprintSoftware software = 2;
}

// BlueprintSoftware is a message that represents a description of a piece of a single software component installed by the blueprint.
message BlueprintSoftware {
  // Title is the user-visible title for this software component.
  string title = 1;

  // Version is the software version for this software component.
  string version = 2;

  // URL is the link to the development site or marketing page for this software component.
  string url = 3;

  // LicenseURL is the link to the license page for this software component.
  string license_url = 4;
}

// BlueprintSupport is a message that represents a description of a support option.
message BlueprintSupport {
  // Description is the description of the support option.
  string description = 1;

  // URL is the link to the page providing this support option.
  string url = 2;

  // Entity is the organization or group that provides the support option.
  string entity = 3;

  // ShowSupportId indicates whether to show the customer's support ID.
  bool show_support_id = 4;
}

message BlueprintMiscContent {
  string name = 1;
  string location = 2;
}

message BlueprintArchitecture {
  string diagram_url = 1;
  repeated string description = 2;
}

message BlueprintDiagram {
  string name = 1;
  string alt_text = 2;
  string description = 3;
}

message BlueprintListContent {
  string title = 1;
  string url = 2;
}

message BlueprintVariable {
  string name = 1;
  string description = 2;
  string var_type = 3;
  string default_value = 4;
  bool required = 5;
}

// BlueprintVariableGroup is manually entered.
message BlueprintVariableGroup {
  string name = 1;
  string description = 2;
  repeated string variables = 3;
}

message BlueprintOutput {
  string name = 1;
  string description = 2;
}

message BlueprintRoles {
  string level = 1;
  repeated string roles = 2;
}
